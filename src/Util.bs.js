// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");

var isEven = ( n => n % 2 == 0 );

function isOdd(value) {
  return !Curry._1(isEven, value);
}

function $$const(a, param) {
  return a;
}

function compose(f, g, x) {
  return Curry._1(f, Curry._1(g, x));
}

function $less$dot$great(f, g, x) {
  return Curry._1(f, Curry._1(g, x));
}

function id(x) {
  return x;
}

function optionToString(opt) {
  if (opt !== undefined) {
    return "Some(" + (String(Caml_option.valFromOption(opt)) + ")");
  } else {
    return "None";
  }
}

function flip(f, b, a) {
  return Curry._2(f, a, b);
}

function replicate(n, a) {
  var _xs = /* [] */0;
  var x = a;
  var _n = n;
  while(true) {
    var n$1 = _n;
    var xs = _xs;
    var match = n$1 > 0;
    if (match) {
      _n = n$1 - 1 | 0;
      _xs = /* :: */[
        x,
        xs
      ];
      continue ;
    } else {
      return xs;
    }
  };
}

exports.isEven = isEven;
exports.isOdd = isOdd;
exports.$$const = $$const;
exports.compose = compose;
exports.$less$dot$great = $less$dot$great;
exports.id = id;
exports.optionToString = optionToString;
exports.flip = flip;
exports.replicate = replicate;
/* isEven Not a pure module */
