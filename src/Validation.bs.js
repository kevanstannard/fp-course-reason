// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");

function toString(value) {
  if (value.TAG) {
    return "Value(" + value._0 + ")";
  } else {
    return "Error(" + value._0 + ")";
  }
}

function isError(value) {
  if (value.TAG) {
    return false;
  } else {
    return true;
  }
}

function isValue(value) {
  return !isError(value);
}

function mapValidation(f, a) {
  if (a.TAG) {
    return {
            TAG: /* Value */1,
            _0: Curry._1(f, a._0)
          };
  } else {
    return {
            TAG: /* Error */0,
            _0: a._0
          };
  }
}

function bindValidation(f, a) {
  if (a.TAG) {
    return Curry._1(f, a._0);
  } else {
    return {
            TAG: /* Error */0,
            _0: a._0
          };
  }
}

function valueOr(a, b) {
  if (a.TAG) {
    return a._0;
  } else {
    return b;
  }
}

function errorOr(a, b) {
  if (a.TAG) {
    return b;
  } else {
    return a._0;
  }
}

exports.toString = toString;
exports.isError = isError;
exports.isValue = isValue;
exports.mapValidation = mapValidation;
exports.bindValidation = bindValidation;
exports.valueOr = valueOr;
exports.errorOr = errorOr;
/* No side effect */
