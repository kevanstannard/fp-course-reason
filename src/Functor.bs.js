// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Listz$Data61Reason = require("./Listz.bs.js");
var ExactlyOne$Data61Reason = require("./ExactlyOne.bs.js");

var ExactlyOneFunctor = {
  fmap: ExactlyOne$Data61Reason.mapExactlyOne
};

var ListzFunctor = {
  fmap: Listz$Data61Reason.map
};

function fmap(f, x) {
  if (x !== undefined) {
    return Caml_option.some(Curry._1(f, Caml_option.valFromOption(x)));
  }
  
}

var OptionFunctor = {
  fmap: fmap
};

function MakeReader(ReaderType) {
  var pure = function (a) {
    return /* Reader */[a];
  };
  var run = function (param) {
    return param[0];
  };
  var map = function (f, param) {
    var g = param[0];
    return /* Reader */[(function (t) {
                return Curry._1(f, Curry._1(g, t));
              })];
  };
  return {
          pure: pure,
          run: run,
          map: map
        };
}

function pure(a) {
  return /* Reader */[a];
}

function run(param) {
  return param[0];
}

function map(f, param) {
  var g = param[0];
  return /* Reader */[(function (t) {
              return Curry._1(f, Curry._1(g, t));
            })];
}

var ReaderInt = {
  pure: pure,
  run: run,
  map: map
};

var ReaderIntFunctor = {
  fmap: map
};

function add1(a) {
  return a + 1 | 0;
}

function times2(a) {
  return (a << 1);
}

var add1Reader = /* Reader */[add1];

var times2Reader = /* Reader */[times2];

var match = map(add1, times2Reader);

var f = match[0];

var x = Curry._1(f, 3);

console.log(x);

exports.ExactlyOneFunctor = ExactlyOneFunctor;
exports.ListzFunctor = ListzFunctor;
exports.OptionFunctor = OptionFunctor;
exports.MakeReader = MakeReader;
exports.ReaderInt = ReaderInt;
exports.ReaderIntFunctor = ReaderIntFunctor;
exports.add1 = add1;
exports.times2 = times2;
exports.add1Reader = add1Reader;
exports.times2Reader = times2Reader;
exports.f = f;
exports.x = x;
/* match Not a pure module */
